{"version":3,"file":"my-element-pure.js","sourceRoot":"","sources":["my-element-pure.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAGxE,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,UAAU;IADlC;;QAEgB,aAAQ,GAAW,OAAO,CAAC;IAY3C,CAAC;IAVG,MAAM;QACF,OAAO,IAAI,CAAA;wBACK,IAAI,CAAC,QAAQ,aAAa,CAAC,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;aACvF,IAAI,CAAC,QAAQ;qDAC2B,IAAI,CAAC,WAAW,IAAI,CAAC;IACtE,CAAC;IAED,WAAW;QACP,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;CACJ,CAAA;AAZe;IAAX,QAAQ,EAAE;2CAA4B;AADrC,SAAS;IADd,aAAa,CAAC,YAAY,CAAC;GACtB,SAAS,CAad","sourcesContent":["import { LitElement, html, property, customElement } from 'lit-element';\n\n@customElement('my-element')\nclass MyElement extends LitElement {\n    @property() greeting: string = 'Hello';\n\n    render() {\n        return html`\n        <input value=\"${this.greeting}\" @keyup=\"${(event: any) => this.greeting = event.target.value}\">\n        <p>${this.greeting}, World</p>\n        <input type=\"button\" value=\"Clear\" @click=\"${this.handleClick}\">`;\n    }\n\n    handleClick() {\n        this.greeting = '';\n    }\n}\n"]}